# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = panoptes-aag
description = Weather service for the Lunatico AAG CloudWatcher.
author = Wilfred Tyler Gee
author_email = wtylergee@gmail.com
license = MIT
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8
url = https://github.com/panoptes/aag-weather/
project_urls =
    Documentation = https://projectpanoptes.org/

platforms = linux

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src
scripts =

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.11

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    importlib-metadata; python_version<"3.11"
    astropy
    fastapi[all]
    fastapi-utils
    httpie
    pandas
    pydantic[dotenv]
    pyserial>=3.4
    typer[all]


[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Extra options.
building =
    pyscaffold>=4.3.1
    pyscaffoldext-markdown
    tox
    twine
docs =
    myst-parser
    piccolo-theme
    pytest_mpl
    sphinx
testing =
    setuptools
    pytest
    pytest-cov
    tox

[options.entry_points]
console_scripts =
    aag-weather = aag.cli:app

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    --cov aag --cov-report term-missing
    --cov-report term-missing:skip-covered
    --cov-report xml:build/coverage.xml
    --strict-markers
    --doctest-modules
    --strict-markers
    -vv
    -ra
norecursedirs =
    dist
    build
    .tox
testpaths = tests
doctest_optionflags = ELLIPSIS NORMALIZE_WHITESPACE ALLOW_UNICODE IGNORE_EXCEPTION_DETAIL
filterwarnings =
    ignore:elementwise == comparison failed:DeprecationWarning
    ignore::pytest.PytestDeprecationWarning
doctest_plus = enabled
# Use pytest markers to select/deselect specific tests
# markers =
#     slow: mark tests as slow (deselect with '-m "not slow"')
#     system: mark end-to-end system tests

[aliases]
dists = bdist_wheel

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
# Have to re-enable the standard pragma
    pragma: no cover
    noqa

# Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

# Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

# Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

show_missing = True
ignore_errors = True

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.4.1
package = aag
extensions =
    markdown
    no_skeleton
